# Generated by Django 5.1.7 on 2025-04-19 17:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('asset_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_name', models.CharField(max_length=150, unique=True)),
                ('asset_type', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('owner', models.CharField(max_length=100)),
                ('criticality_level', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Assets',
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('incident_id', models.AutoField(primary_key=True, serialize=False)),
                ('incident_type', models.CharField(max_length=100, verbose_name='Incident Type')),
                ('description', models.TextField(verbose_name='Description')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=50, verbose_name='Severity')),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=50, verbose_name='Status')),
                ('reported_date', models.DateTimeField(null=True, verbose_name='Reported Date')),
                ('resolved_date', models.DateTimeField(blank=True, null=True, verbose_name='Resolved Date')),
            ],
            options={
                'verbose_name': 'Incident',
                'verbose_name_plural': 'Incidents',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('analyst', 'Security Analyst'), ('manager', 'Security Manager'), ('user', 'Regular User')], default='user', max_length=50)),
                ('password', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('vulnerability_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('severity', models.CharField(max_length=50)),
                ('cve_reference', models.CharField(max_length=100)),
                ('remediation_steps', models.TextField()),
                ('discovery_date', models.DateTimeField(blank=True, null=True)),
                ('patch_available', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Vulnerability',
                'verbose_name_plural': 'Vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='ThreatAssetAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threat_associations', to='api.asset')),
            ],
            options={
                'verbose_name': 'Threat Asset Association',
                'verbose_name_plural': 'Threat Asset Associations',
                'db_table': 'threat_asset_association',
            },
        ),
        migrations.CreateModel(
            name='ThreatIncidentAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_threats', to='api.incident')),
            ],
            options={
                'verbose_name': 'Threat Incident Association',
                'verbose_name_plural': 'Threat Incident Associations',
                'db_table': 'threat_incident_association',
            },
        ),
        migrations.CreateModel(
            name='ThreatIntelligence',
            fields=[
                ('threat_id', models.AutoField(primary_key=True, serialize=False)),
                ('threat_actor_name', models.CharField(max_length=100)),
                ('indicator_type', models.CharField(choices=[('ip', 'IP Address'), ('domain', 'Domain'), ('url', 'URL'), ('file_hash', 'File Hash'), ('email', 'Email'), ('other', 'Other')], max_length=50)),
                ('indicator_value', models.CharField(max_length=255)),
                ('confidence_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], max_length=50)),
                ('description', models.TextField()),
                ('related_cve', models.CharField(blank=True, max_length=100, null=True)),
                ('date_identified', models.DateTimeField(auto_now=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('assets', models.ManyToManyField(through='api.ThreatAssetAssociation', to='api.asset')),
                ('incidents', models.ManyToManyField(through='api.ThreatIncidentAssociation', to='api.incident')),
            ],
            options={
                'verbose_name': 'Threat Intelligence',
                'verbose_name_plural': 'Threat Intelligence',
            },
        ),
        migrations.AddField(
            model_name='threatincidentassociation',
            name='threat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threat_incidents', to='api.threatintelligence'),
        ),
        migrations.AddField(
            model_name='threatassetassociation',
            name='threat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_associations', to='api.threatintelligence'),
        ),
        migrations.AddField(
            model_name='incident',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to='api.user', verbose_name='Assigned To'),
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('log_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('create', 'Resource Creation'), ('update', 'Resource Update'), ('delete', 'Resource Deletion'), ('view', 'Resource View')], max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('resource_type', models.CharField(blank=True, max_length=100, null=True)),
                ('resource_id', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='api.user')),
            ],
            options={
                'verbose_name': 'User Activity Log',
                'verbose_name_plural': 'User Activity Logs',
                'db_table': 'user_activity_logs',
            },
        ),
        migrations.CreateModel(
            name='ThreatVulnerabilityAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('threat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerability_associations', to='api.threatintelligence')),
                ('vulnerability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threat_associations', to='api.vulnerability')),
            ],
            options={
                'verbose_name': 'Threat Vulnerability Association',
                'verbose_name_plural': 'Threat Vulnerability Associations',
                'db_table': 'threat_vulnerability_association',
            },
        ),
        migrations.AddField(
            model_name='threatintelligence',
            name='vulnerabilities',
            field=models.ManyToManyField(through='api.ThreatVulnerabilityAssociation', to='api.vulnerability'),
        ),
        migrations.CreateModel(
            name='AssetVulnerability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_discovered', models.DateField(auto_now_add=True)),
                ('status', models.CharField(max_length=50)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vulnerabilities', to='api.asset')),
                ('vulnerability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='api.vulnerability')),
            ],
            options={
                'verbose_name': 'Asset Vulnerability',
                'verbose_name_plural': 'Asset Vulnerabilities',
                'db_table': 'asset_vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('alert_id', models.AutoField(primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('alert_type', models.CharField(max_length=100)),
                ('alert_time', models.DateTimeField(auto_now_add=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=50)),
                ('status', models.CharField(choices=[('new', 'New'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='new', max_length=50)),
                ('incident', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to='api.incident')),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Alerts',
                'indexes': [models.Index(fields=['incident_id'], name='idx_alert_incident_id')],
            },
        ),
        migrations.CreateModel(
            name='IncidentAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('impact_level', models.CharField(max_length=100)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_assets', to='api.asset')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_assets', to='api.incident')),
            ],
            options={
                'verbose_name': 'Incident Asset',
                'verbose_name_plural': 'Incident Assets',
                'db_table': 'incident_assets',
                'indexes': [models.Index(fields=['incident_id'], name='idx_incident_id'), models.Index(fields=['asset_id'], name='idx_asset_id_ia')],
                'constraints': [models.UniqueConstraint(fields=('incident', 'asset'), name='unique_incident_asset')],
            },
        ),
        migrations.AddIndex(
            model_name='threatincidentassociation',
            index=models.Index(fields=['threat_id'], name='idx_tia_threat_id'),
        ),
        migrations.AddIndex(
            model_name='threatincidentassociation',
            index=models.Index(fields=['incident_id'], name='idx_tia_incident_id'),
        ),
        migrations.AddConstraint(
            model_name='threatincidentassociation',
            constraint=models.UniqueConstraint(fields=('threat', 'incident'), name='unique_threat_incident'),
        ),
        migrations.AddIndex(
            model_name='threatassetassociation',
            index=models.Index(fields=['threat_id'], name='idx_taa_threat_id'),
        ),
        migrations.AddIndex(
            model_name='threatassetassociation',
            index=models.Index(fields=['asset_id'], name='idx_taa_asset_id'),
        ),
        migrations.AddConstraint(
            model_name='threatassetassociation',
            constraint=models.UniqueConstraint(fields=('threat', 'asset'), name='unique_threat_asset'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['user_id'], name='idx_ual_user_id'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['activity_type'], name='idx_ual_activity_type'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['timestamp'], name='idx_ual_timestamp'),
        ),
        migrations.AddIndex(
            model_name='threatvulnerabilityassociation',
            index=models.Index(fields=['threat_id'], name='idx_tva_threat_id'),
        ),
        migrations.AddIndex(
            model_name='threatvulnerabilityassociation',
            index=models.Index(fields=['vulnerability_id'], name='idx_tva_vulnerability_id'),
        ),
        migrations.AddConstraint(
            model_name='threatvulnerabilityassociation',
            constraint=models.UniqueConstraint(fields=('threat', 'vulnerability'), name='unique_threat_vulnerability'),
        ),
        migrations.AddIndex(
            model_name='assetvulnerability',
            index=models.Index(fields=['asset_id'], name='idx_av_asset_id'),
        ),
        migrations.AddIndex(
            model_name='assetvulnerability',
            index=models.Index(fields=['vulnerability_id'], name='idx_asset_vulnerability_id'),
        ),
        migrations.AddConstraint(
            model_name='assetvulnerability',
            constraint=models.UniqueConstraint(fields=('asset', 'vulnerability'), name='unique_asset_vulnerability'),
        ),
    ]
